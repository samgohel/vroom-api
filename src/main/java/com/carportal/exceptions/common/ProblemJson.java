package com.carportal.exceptions.common;

import com.fasterxml.jackson.annotation.JsonInclude;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;

/**
 * RFC 7807 "Problem Details" JSON object. See: https://www.rfc-editor.org/rfc/rfc7807
 */
@Data
@Builder
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@Schema(name = "ProblemJson", description = "RFC 7807 Problem Details response")
public class ProblemJson {

  @Schema(
      description = "A URI reference that identifies the problem type. Defaults to 'about:blank'.",
      example = "https://carportal.com/errors/validation-error"
  )
  private String type;

  @Schema(
      description = "A short, human-readable summary of the problem type.",
      example = "Validation Error"
  )
  private String title;

  @Schema(
      description = "The HTTP status code generated by the origin server.",
      example = "400"
  )
  private int status;

  @Schema(
      description = "A human-readable explanation specific to this occurrence of the problem.",
      example = "One or more fields failed validation."
  )
  private String detail;

  @Schema(
      description = "A URI reference that identifies the specific occurrence of the problem. Usually the request path.",
      example = "/api/v1/cars"
  )
  private String instance;

  @ArraySchema(
      arraySchema = @Schema(description = "Optional: validation or business errors"),
      schema = @Schema(implementation = ApiValidationError.class)
  )
  private List<ApiSubError> invalidParams;
}